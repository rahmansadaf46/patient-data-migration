const mongoose = require("mongoose");

const PatientSchema = new mongoose.Schema({
  patient_id: { type: Number, required: true },
  tribe: { type: Number },
  creator: { type: Number, required: true },
  date_created: { type: Date, required: true },
  changed_by: { type: Number },
  date_changed: { type: Date },
  voided: { type: Number, required: true },
  voided_by: { type: Number },
  date_voided: { type: Date },
  void_reason: { type: String },
  patient_identifier: {
    patient_identifier_id: { type: Number, required: true },
    patient_id: { type: Number, required: true },
    identifier: { type: String, required: true },
    identifier_type: { type: Number, required: true },
    preferred: { type: Number, required: true },
    location_id: { type: Number, required: true },
    creator: { type: Number, required: true },
    date_created: { type: Date, required: true },
    voided: { type: Number, required: true },
    voided_by: { type: Number },
    date_voided: { type: Date },
    void_reason: { type: String },
    uuid: { type: String, required: true },
  },

  patient_search: {
    patient_id: { type: Number, required: true },
    identifier: { type: String },
    fullname: { type: String },
    given_name: { type: String },
    middle_name: { type: String },
    family_name: { type: String },
    gender: { type: String },
    birthdate: { type: Date },
    age: { type: Number },
    person_name_id: { type: Number },
    photo: { type: Buffer },
  },

  person: {
    person_id: { type: Number, required: true },
    gender: { type: String },
    birthdate: { type: Date },
    birthdate_estimated: { type: Number, required: true },
    dead: { type: Number, required: true },
    death_date: { type: Date },
    cause_of_death: { type: Number },
    creator: { type: Number, required: true },
    date_created: { type: Date, required: true },
    changed_by: { type: Number },
    date_changed: { type: Date },
    voided: { type: Number, required: true },
    voided_by: { type: Number },
    date_voided: { type: Date },
    void_reason: { type: String },
    uuid: { type: String, required: true },
  },

  person_address: {
    person_address_id: { type: Number, required: true },
    person_id: { type: Number },
    preferred: { type: Number, required: true },
    address1: { type: String },
    address2: { type: String },
    city_village: { type: String },
    state_province: { type: String },
    postal_code: { type: String },
    country: { type: String },
    latitude: { type: String },
    longitude: { type: String },
    creator: { type: Number },
    date_created: { type: Date },
    voided: { type: Number, required: true },
    voided_by: { type: Number },
    date_voided: { type: Date },
    void_reason: { type: String },
    county_district: { type: String },
    address3: { type: String },
    address6: { type: String },
    address5: { type: String },
    address4: { type: String },
    uuid: { type: String },
  },

  person_attribute: {
    person_attribute_id: { type: Number, required: true },
    person_id: { type: Number, required: true },
    value: { type: String },
    person_attribute_type_id: { type: Number, required: true },
    creator: { type: Number, required: true },
    date_created: { type: Date, required: true },
    changed_by: { type: Number },
    date_changed: { type: Date },
    voided: { type: Number, required: true },
    voided_by: { type: Number },
    date_voided: { type: Date },
    void_reason: { type: String },
    uuid: { type: String, required: true },
  },

  person_name: {
    person_name_id: { type: Number, required: true },
    preferred: { type: Number, required: true },
    person_id: { type: Number, required: true },
    prefix: { type: String },
    given_name: { type: String },
    middle_name: { type: String },
    family_name_prefix: { type: String },
    family_name: { type: String },
    family_name2: { type: String },
    family_name_suffix: { type: String },
    degree: { type: String },
    creator: { type: Number, required: true },
    date_created: { type: Date, required: true },
    voided: { type: Number, required: true },
    voided_by: { type: Number },
    date_voided: { type: Date },
    void_reason: { type: String },
    changed_by: { type: Number },
    date_changed: { type: Date },
    uuid: { type: String, required: true },
  },
});
module.exports = mongoose.model("Patients", PatientSchema);
